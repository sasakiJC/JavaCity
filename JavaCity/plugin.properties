modelElements = system,package,class,method,attributes,inheritance,invocation,access;
#system
system.glyphList = wall,cuboid,rooftop,terrain
system.isVisible = true;
system.glyph = terrain;
system.InnerLayout = rectangle packing;
system.HorizontalMargin = 8;
system.HorizontalGap = 8;
system.alpha.mapper.type = constant;
system.alpha.mapper.value = 0;

#package
package.glyphList = wall,cuboid,rooftop,terrain
package.isVisible = true;
package.glyph = terrain;
package.InnerLayout = rectangle packing;
package.HorizontalMargin = 8;
package.HorizontalGap = 8;
package.color.mapper.type = colorLinear;
package.color.mapper.value = #DIH;
package.color.mapper.range = gray,white
package.color.mapper.strategy = linear;
package.width.mapper.value = 15;
package.length.mapper.value = 15;

#class
class.glyphList = wall,cuboid,rooftop,terrain
class.isVisible = true;
class.glyph = cuboid;
class.HorizontalMargin = 4;
class.color.mapper.type = colorLinear;
class.color.mapper.value = #LOC;
class.color.mapper.range = gray,blue
class.color.mapper.strategy = linear;
class.width.mapper.type = Identity;
class.width.mapper.value = #NOA;
class.length.mapper.type = Identity;
class.length.mapper.value = #NOA;
class.height.mapper.type = Identity;
class.height.mapper.value = #NOM;

#method
method.glyphList = wall,cuboid,rooftop,terrain
method.isVisible = false;
method.glyph = "cuboid";
method.color.mapper.value = brown;
method.width.mapper.value = 15;
method.length.mapper.value = 15;
method.height.mapper.value = 15;

#attributes
attributes.glyphList = wall,cuboid,rooftop,terrain
attributes.isVisible = false;
attributes.glyph = cuboid;

#inheritance
inheritance.glyphList = arch,line
inheritance.isVisible = false;
inheritance.glyph = line;

#invocation
invocation.glyphList = arch,line
invocation.isVisible = false;
invocation.glyph = line;

#access
access.glyphList = arch,line
access.isVisible = false;
access.glyph = line;

#Glyph
wall.attributes = color,alpha,width,length,wallThickness,wallHeight
cuboid.attributes = color,alpha,width,length,height
rooftop.attributes = color,alpha,width,length,roofTopThickness
terrain.attributes = color,alpha,width,length,terrainThickness
arch.attributes = color,alpha;
line.attributes = color,alpha;

#default
#mapper
default.color.mapper.type = constant;
default.color.mapper.value = gray;
default.alpha.mapper.type = constant;
default.alpha.mapper.value = 1;
default.width.mapper.type = constant;
default.width.mapper.value = 1;
default.length.mapper.type = constant;
default.length.mapper.value = 1;
default.height.mapper.type = constant;
default.height.mapper.value = 1;
default.wallThickness.mapper.type = constant;
default.wallThickness.mapper.value = 1;
default.wallHeight.mapper.type = constant;
default.wallHeight.mapper.value = 2;
default.roofTopThickness.mapper.type = constant;
default.roofTopThickness.mapper.value = 1;
default.terrainThickness.mapper.type = constant;
default.terrainThickness.mapper.value = 2;
#innerLayout
default.InnerLayout = chessboard;
default.HorizontalMargin = 0.5;
default.HorizontalGap = 1;
default.VerticalMargin = 0.2;
default.VerticalGap = 1;

