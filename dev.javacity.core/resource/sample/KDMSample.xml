<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<kdm:Segment name="UnnamedProject" xmi:version="2.1" xmlns:core="http://schema.omg.org/spec/KDM/1.1/core" xmlns:code="http://schema.omg.org/spec/KDM/1.1/code" xmlns:ui="http://schema.omg.org/spec/KDM/1.1/ui" xmlns:data="http://schema.omg.org/spec/KDM/1.1/data" xmlns:xmi="http://www.omg.org/XMI" xmlns:build="http://schema.omg.org/spec/KDM/1.1/build" xmlns:kdm="http://schema.omg.org/spec/KDM/1.1/kdm" xmlns:action="http://schema.omg.org/spec/KDM/1.1/action" xmlns:source="http://schema.omg.org/spec/KDM/1.1/source" xmlns:platform="http://schema.omg.org/spec/KDM/1.1/platform" xmlns:structure="http://schema.omg.org/spec/KDM/1.1/structure" xmlns:conceptual="http://schema.omg.org/spec/KDM/1.1/conceptual">
    <model xsi:type="source:InventoryModel" xmi:id="id.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <inventoryElement xsi:type="source:Directory" path="C:/Users/John/Desktop/DiningPhilosopher2/" xmi:id="id.1">
            <inventoryElement xsi:type="source:Directory" name="src" xmi:id="id.2">
                <inventoryElement xsi:type="source:Directory" name="synchrovis" xmi:id="id.3">
                    <inventoryElement xsi:type="source:Directory" name="examples" xmi:id="id.4">
                        <inventoryElement xsi:type="source:Directory" name="dp" xmi:id="id.5">
                            <inventoryElement xsi:type="source:Directory" name="accessoires" xmi:id="id.6">
                                <inventoryElement xsi:type="source:SourceFile" language="Java" path="C:/Users/John/Desktop/DiningPhilosopher2/src/synchrovis/examples/dp/accessoires/" name="Stick.java" xmi:id="id.9"/>
                            </inventoryElement>
                            <inventoryElement xsi:type="source:Directory" name="main" xmi:id="id.7">
                                <inventoryElement xsi:type="source:SourceFile" language="Java" path="C:/Users/John/Desktop/DiningPhilosopher2/src/synchrovis/examples/dp/main/" name="DPInstance.java" xmi:id="id.10"/>
                            </inventoryElement>
                            <inventoryElement xsi:type="source:Directory" name="philosophers" xmi:id="id.8">
                                <inventoryElement xsi:type="source:SourceFile" language="Java" path="C:/Users/John/Desktop/DiningPhilosopher2/src/synchrovis/examples/dp/philosophers/" name="Philosopher.java" xmi:id="id.11"/>
                            </inventoryElement>
                        </inventoryElement>
                    </inventoryElement>
                </inventoryElement>
            </inventoryElement>
        </inventoryElement>
    </model>
    <model xsi:type="code:CodeModel" xmi:id="id.12" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <codeElement xsi:type="code:Package" name="synchrovis.examples.dp.main" xmi:id="id.23">
            <codeElement xsi:type="code:ClassUnit" isAbstract="false" name="DPInstance" xmi:id="id.24">
                <source snippet="public class DPInstance {}" xmi:id="id.25">
                    <region startLine="6" startPosition="13" endLine="6" endPosition="23" file="id.10" xmi:id="id.26"/>
                </source>
                <codeRelation xsi:type="code:Imports" to="id.122" from="id.24" xmi:id="id.27"/>
                <codeRelation xsi:type="code:Imports" to="id.52" from="id.24" xmi:id="id.28"/>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="public" type="id.30" name="main" xmi:id="id.29">
                    <codeRelation xsi:type="code:Signature" name="main" xmi:id="id.30">
                        <parameterUnit pos="1" type="id.32" name="args" xmi:id="id.31">
                            <codeRelation xsi:type="code:ArrayType" name="String[]" xmi:id="id.32">
                                <itemUnit type="id.21" xmi:id="id.33"/>
                            </codeRelation>
                        </parameterUnit>
                        <parameterUnit kind="return" type="id.22" xmi:id="id.34"/>
                    </codeRelation>
                    <source snippet="public static void main(String[] args) {}" xmi:id="id.35">
                        <region startLine="30" startPosition="20" endLine="30" endPosition="24" file="id.10" xmi:id="id.36"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="private" type="id.38" name="startPhilosophers" xmi:id="id.37">
                    <codeRelation xsi:type="code:Signature" name="startPhilosophers" xmi:id="id.38">
                        <parameterUnit kind="return" type="id.22" xmi:id="id.39"/>
                    </codeRelation>
                    <source snippet="private void startPhilosophers() {}" xmi:id="id.40">
                        <region startLine="8" startPosition="14" endLine="8" endPosition="31" file="id.10" xmi:id="id.41"/>
                    </source>
                    <codeElement xsi:type="code:StorableUnit" kind="local" type="id.16" name="N" xmi:id="id.42"/>
                    <codeElement xsi:type="code:StorableUnit" kind="local" type="id.44" name="sticks" xmi:id="id.43">
                        <codeRelation xsi:type="code:ArrayType" name="Stick[]" xmi:id="id.44">
                            <itemUnit type="id.46" xmi:id="id.45">
                                <codeRelation xsi:type="code:HasType" to="id.122" from="id.45" xmi:id="id.46"/>
                            </itemUnit>
                        </codeRelation>
                    </codeElement>
                    <codeElement xsi:type="code:StorableUnit" kind="local" type="id.48" name="philos" xmi:id="id.47">
                        <codeRelation xsi:type="code:ArrayType" name="Philosopher[]" xmi:id="id.48">
                            <itemUnit type="id.50" xmi:id="id.49">
                                <codeRelation xsi:type="code:HasType" to="id.52" from="id.49" xmi:id="id.50"/>
                            </itemUnit>
                        </codeRelation>
                    </codeElement>
                </codeElement>
            </codeElement>
        </codeElement>
        <codeElement xsi:type="code:Package" name="synchrovis.examples.dp.philosophers" xmi:id="id.51">
            <codeElement xsi:type="code:ClassUnit" isAbstract="false" name="Philosopher" xmi:id="id.52">
                <source snippet="public class Philosopher extends Thread {}" xmi:id="id.53">
                    <region startLine="5" startPosition="13" endLine="5" endPosition="24" file="id.11" xmi:id="id.54"/>
                </source>
                <codeRelation xsi:type="code:Imports" to="id.122" from="id.52" xmi:id="id.55"/>
                <codeRelation xsi:type="code:Extends" to="Thread" from="id.52" xmi:id="id.56"/>
                <codeElement xsi:type="code:StorableUnit" kind="global" type="id.58" name="first" xmi:id="id.57">
                    <codeRelation xsi:type="code:HasType" to="id.122" from="id.57" xmi:id="id.58"/>
                    <source snippet="private Stick first" xmi:id="id.59">
                        <region startLine="7" startPosition="14" endLine="7" endPosition="19" file="id.11" xmi:id="id.60"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:StorableUnit" kind="global" type="id.62" name="left" xmi:id="id.61">
                    <codeRelation xsi:type="code:HasType" to="id.122" from="id.61" xmi:id="id.62"/>
                    <source snippet="private Stick left" xmi:id="id.63">
                        <region startLine="9" startPosition="14" endLine="9" endPosition="18" file="id.11" xmi:id="id.64"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:StorableUnit" kind="global" type="id.66" name="right" xmi:id="id.65">
                    <codeRelation xsi:type="code:HasType" to="id.122" from="id.65" xmi:id="id.66"/>
                    <source snippet="private Stick right" xmi:id="id.67">
                        <region startLine="10" startPosition="14" endLine="10" endPosition="19" file="id.11" xmi:id="id.68"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:StorableUnit" kind="global" type="id.70" name="second" xmi:id="id.69">
                    <codeRelation xsi:type="code:HasType" to="id.122" from="id.69" xmi:id="id.70"/>
                    <source snippet="private Stick second" xmi:id="id.71">
                        <region startLine="8" startPosition="14" endLine="8" endPosition="20" file="id.11" xmi:id="id.72"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="constructor" export="public" type="id.74" name="Philosopher" xmi:id="id.73">
                    <codeRelation xsi:type="code:Signature" name="Philosopher" xmi:id="id.74">
                        <parameterUnit pos="1" type="id.76" name="left" xmi:id="id.75">
                            <codeRelation xsi:type="code:HasType" to="id.122" from="id.75" xmi:id="id.76"/>
                        </parameterUnit>
                        <parameterUnit pos="2" type="id.78" name="right" xmi:id="id.77">
                            <codeRelation xsi:type="code:HasType" to="id.122" from="id.77" xmi:id="id.78"/>
                        </parameterUnit>
                    </codeRelation>
                    <source snippet="public Philosopher(Stick left, Stick right) {}" xmi:id="id.79">
                        <region startLine="12" startPosition="8" endLine="12" endPosition="19" file="id.11" xmi:id="id.80"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="private" type="id.82" name="eat" xmi:id="id.81">
                    <codeRelation xsi:type="code:Signature" name="eat" xmi:id="id.82">
                        <parameterUnit kind="return" type="id.22" xmi:id="id.83"/>
                    </codeRelation>
                    <source snippet="private void eat() {}" xmi:id="id.84">
                        <region startLine="17" startPosition="14" endLine="17" endPosition="17" file="id.11" xmi:id="id.85"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="private" type="id.87" name="layDownLeftStick" xmi:id="id.86">
                    <codeRelation xsi:type="code:Signature" name="layDownLeftStick" xmi:id="id.87">
                        <parameterUnit kind="return" type="id.22" xmi:id="id.88"/>
                    </codeRelation>
                    <source snippet="private void layDownLeftStick() {}" xmi:id="id.89">
                        <region startLine="25" startPosition="14" endLine="25" endPosition="30" file="id.11" xmi:id="id.90"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="private" type="id.92" name="layDownRightStick" xmi:id="id.91">
                    <codeRelation xsi:type="code:Signature" name="layDownRightStick" xmi:id="id.92">
                        <parameterUnit kind="return" type="id.22" xmi:id="id.93"/>
                    </codeRelation>
                    <source snippet="private void layDownRightStick() {}" xmi:id="id.94">
                        <region startLine="34" startPosition="14" endLine="34" endPosition="31" file="id.11" xmi:id="id.95"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="private" type="id.97" name="pickUpLeftStick" xmi:id="id.96">
                    <codeRelation xsi:type="code:Signature" name="pickUpLeftStick" xmi:id="id.97">
                        <parameterUnit kind="return" type="id.22" xmi:id="id.98"/>
                    </codeRelation>
                    <source snippet="private void pickUpLeftStick() {}" xmi:id="id.99">
                        <region startLine="43" startPosition="14" endLine="43" endPosition="29" file="id.11" xmi:id="id.100"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="private" type="id.102" name="pickUpRightStick" xmi:id="id.101">
                    <codeRelation xsi:type="code:Signature" name="pickUpRightStick" xmi:id="id.102">
                        <parameterUnit kind="return" type="id.22" xmi:id="id.103"/>
                    </codeRelation>
                    <source snippet="private void pickUpRightStick() {}" xmi:id="id.104">
                        <region startLine="52" startPosition="14" endLine="52" endPosition="30" file="id.11" xmi:id="id.105"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="public" type="id.107" name="run" xmi:id="id.106">
                    <codeRelation xsi:type="code:Signature" name="run" xmi:id="id.107">
                        <parameterUnit kind="return" type="id.22" xmi:id="id.108"/>
                    </codeRelation>
                    <source snippet="public void run() {}" xmi:id="id.109">
                        <region startLine="61" startPosition="13" endLine="61" endPosition="16" file="id.11" xmi:id="id.110"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="private" type="id.112" name="think" xmi:id="id.111">
                    <codeRelation xsi:type="code:Signature" name="think" xmi:id="id.112">
                        <parameterUnit kind="return" type="id.22" xmi:id="id.113"/>
                    </codeRelation>
                    <source snippet="private void think() {}" xmi:id="id.114">
                        <region startLine="87" startPosition="14" endLine="87" endPosition="19" file="id.11" xmi:id="id.115"/>
                    </source>
                </codeElement>
                <codeElement xsi:type="code:MethodUnit" kind="method" export="private" type="id.117" name="wakeUp" xmi:id="id.116">
                    <codeRelation xsi:type="code:Signature" name="wakeUp" xmi:id="id.117">
                        <parameterUnit kind="return" type="id.22" xmi:id="id.118"/>
                    </codeRelation>
                    <source snippet="private void wakeUp() {}" xmi:id="id.119">
                        <region startLine="95" startPosition="14" endLine="95" endPosition="20" file="id.11" xmi:id="id.120"/>
                    </source>
                </codeElement>
            </codeElement>
        </codeElement>
        <codeElement xsi:type="code:Package" name="synchrovis.examples.dp.accessoires" xmi:id="id.121">
            <codeElement xsi:type="code:ClassUnit" isAbstract="false" name="Stick" xmi:id="id.122">
                <source snippet="public class Stick {}" xmi:id="id.123">
                    <region startLine="3" startPosition="13" endLine="3" endPosition="18" file="id.9" xmi:id="id.124"/>
                </source>
                <codeElement xsi:type="code:MethodUnit" kind="constructor" export="public" name="Stick" xmi:id="id.125">
                    <source snippet="public Stick() {}" xmi:id="id.126">
                        <region startLine="4" startPosition="8" endLine="4" endPosition="13" file="C:/Users/John/Desktop/DiningPhilosopher2/src/synchrovis/examples/dp/accessoires/Stick.java" xmi:id="id.127"/>
                    </source>
                </codeElement>
            </codeElement>
        </codeElement>
        <codeElement xsi:type="code:LanguageUnit" name="Common Java types" xmi:id="id.13">
            <codeElement xsi:type="code:BooleanType" name="boolean" xmi:id="id.14"/>
            <codeElement xsi:type="code:CharType" name="char" xmi:id="id.15"/>
            <codeElement xsi:type="code:IntegerType" name="int" xmi:id="id.16"/>
            <codeElement xsi:type="code:IntegerType" name="long" xmi:id="id.17"/>
            <codeElement xsi:type="code:IntegerType" name="byte" xmi:id="id.18"/>
            <codeElement xsi:type="code:FloatType" name="float" xmi:id="id.19"/>
            <codeElement xsi:type="code:FloatType" name="double" xmi:id="id.20"/>
            <codeElement xsi:type="code:StringType" name="String" xmi:id="id.21"/>
            <codeElement xsi:type="code:VoidType" name="void" xmi:id="id.22"/>
        </codeElement>
    </model>
    <model xsi:type="structure:StructureModel" name="Package Diagram" xmi:id="id.128" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <structureElement xsi:type="structure:SoftwareSystem" xmi:id="id.129">
            <structureElement xsi:type="structure:Component" implementation="id.24" name="synchrovis.examples.dp.main" xmi:id="id.130">
                <structureRelationship xsi:type="structure:StructureRelationship" to="synchrovis.examples.dp.accessoires" from="id.130" xmi:id="id.131" xmi:label="&lt;&lt;usage&gt;&gt;"/>
                <structureRelationship xsi:type="structure:StructureRelationship" to="synchrovis.examples.dp.philosophers" from="id.130" xmi:id="id.132" xmi:label="&lt;&lt;usage&gt;&gt;"/>
            </structureElement>
            <structureElement xsi:type="structure:Component" implementation="id.52" name="synchrovis.examples.dp.philosophers" xmi:id="id.133">
                <structureRelationship xsi:type="structure:StructureRelationship" to="synchrovis.examples.dp.accessoires" from="id.133" xmi:id="id.134" xmi:label="&lt;&lt;usage&gt;&gt;"/>
            </structureElement>
            <structureElement xsi:type="structure:Component" implementation="id.122" name="synchrovis.examples.dp.accessoires" xmi:id="id.135"/>
        </structureElement>
    </model>
</kdm:Segment>
